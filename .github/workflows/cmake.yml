name: CMake

on:
  push:
    tags:
      - '*'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure Updater
      run: |
        echo ${{github.ref_name}} > version.txt
        pip install pyinstaller readchar requests chardet
        pyinstaller --onefile --console --add-data "version.txt;." --workpath=build/_pytmp --distpath=build --icon="assets/icon.ico" launcher.py

    - run: |
        choco install openssl
      shell: cmd
    
    - run: |
        vcpkg install socket-io-client:x64-windows
        vcpkg integrate install

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DAPP_VERSION="${{github.ref_name}}" -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Create Windows Build
      run: |
        mkdir release
        cp build/*/bq-r.exe release/blockquest-remake.exe
        cp build/*/*.lib release/
        cp build/*/*.dll release/
        cp build/launcher.* release/
        cp openal32.dll release/
        cp -r assets/ release/assets/

    - name: Publish Windows Build
      uses: actions/upload-artifact@v2
      with:
        name: BlockQuestRemake
        path: release
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    
    - name: Zip files
      if: startsWith(github.ref, 'refs/tags/')
      uses: vimtor/action-zip@v1
      with:
        files: release/
        dest: BlockQuestRemake.zip

    - name: Create Release Tag
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: BlockQuestRemake.zip
